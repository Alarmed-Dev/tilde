var db;var dbready=$.Event("dbready");var sessionNotes=[];if(!window.indexedDB){navigator.notification.alert("This platform doesn't support IndexedDB. By extension, you will be unable to use its core features.",null,"IndexedDB unsupported.")}else{request=window.indexedDB.open("tilde",1);request.onerror=function(event){console.log("~ There was an error!");console.log(event)};request.onsuccess=function(event){console.log("~ DB requested successfully! Keep going.");db=event.target.result;$(window).trigger(dbready);db.onerror=function(event){navigator.notification.alert("An error has occured within the application. If this error persists, contact one of the developers.\n Error code: "+event.target.errorCode,null,"Something happened...")};db.onsuccess=function(event){}};request.onupgradeneeded=function(event){console.log("~ DB upgrade needed.");db=event.target.result;var objectStore=db.createObjectStore("notes",{keyPath:"title"});objectStore.createIndex("tags","tags",{unique:false});objectStore.createIndex("agenda","agenda",{unique:false});objectStore.createIndex("bookmark","bookmark",{unique:false});objectStore.createIndex("class","class",{unique:false});objectStore.createIndex("section","section",{unique:false});objectStore.createIndex("body","body",{unique:false});objectStore.createIndex("inittime","inittime",{unique:false});objectStore.createIndex("time","time",{unique:false});objectStore.createIndex("important","important",{unique:false});objectStore.createIndex("favourite","favourite",{unique:false});objectStore.createIndex("minor","minor",{unique:false})}}function Note(store){this.store=store}Note.prototype.getNote=function(key,mode,display,callback){var evnt=$.Event("noteretrieved");var transaction=db.transaction([this.store]);var objectStore=transaction.objectStore(this.store);var request=objectStore.get(key);request.onerror=function(event){console.log("~ An error occured while retrieving note...");console.log(event.target.errorCode);return false};request.onsuccess=function(event){var data=request.result;if(data!=undefined){var retrievedNote={title:data.title,tags:data.tags,agenda:data.agenda,bookmark:data.bookmark,class:data.class,section:data.section,body:data.body,favourite:data.favourite,important:data.important,minor:data.minor,inittime:data.inittime}}else{var retrievedNote=undefined}console.log("~ Retrieved note.");console.log(retrievedNote);if(display){displayNote(retrievedNote,mode)}if(callback!=undefined){callback(retrievedNote)}$(window).trigger(evnt);return retrievedNote}};Note.prototype.addToDB=function(content,callback){var today=new Date();var toPush={title:content[0].trim(),agenda:content[1],bookmark:content[2],tags:content[3].trim(),class:content[4].trim(),section:content[5].trim(),body:content[6].trim(),favourite:content[7],important:content[8],minor:content[9],inittime:today.getTime(),time:today.getTime()};sessionNotes.push(toPush);var transaction=db.transaction([this.store],"readwrite");transaction.onerror=function(event){console.log("~ Something happened with the transaction...");console.log(transaction.error);return false};transaction.oncomplete=function(event){console.log("~ Transaction complete.");navigator.notification.alert("Your note has been saved.",null,"Note saved!");if(callback!=undefined){callback()}return true};var objectStore=transaction.objectStore(this.store);for(var i in sessionNotes){var request=objectStore.add(sessionNotes[i]);request.onsuccess=function(event){sessionNotes=[]}}};Note.prototype.removeFromDB=function(key,callback){var request=db.transaction([this.store],"readwrite").objectStore(this.store).delete(key);request.onsuccess=function(event){console.log("~ Note successfully removed from the database.");if(callback!=undefined){callback()}return true};request.onerror=function(event){console.log("~ Failed to remove item from the database...");console.log(event.target.errorCode);return false}};Note.prototype.updateNote=function(key,title,bookmark,tags,nclass,section,body,fav,imp,min,callback){var objectStore=db.transaction([this.store],"readwrite").objectStore("notes");var request=objectStore.get(key);request.onerror=function(event){console.log("~ Error while trying to retrieve note.");console.log(event.target.errorCode);return false};request.onsuccess=function(event){console.log("~ Note retrieved.");var data=event.target.result;data.title=title.trim();data.bookmark=bookmark;data.tags=tags.trim();data.class=nclass.trim();data.section=section.trim();data.body=body.trim();data.favourite=fav;data.important=imp;data.minor=min;data.time=new Date();var updateReq=objectStore.put(data);updateReq.onerror=function(event){console.log("~ Error while updating note.");console.log(event.target.error);return false};updateReq.onsuccess=function(event){console.log("~ Note updated!");if(callback!=undefined){callback()}return true}}};Note.prototype.retrieveAllNotes=function(append){console.log("~ Retrieving all notes.");var notes=[];var objStore=db.transaction(this.store).objectStore("notes");objStore.openCursor().onsuccess=function(event){var cursor=event.target.result;if(cursor){notes.push(cursor.value);cursor.continue()}else{console.log("~ Displaying notes");filterNotes(notes,append[0],append[1],append[2],append[3],append[4],append[5],append[6],append[7],append[8],append[9],append[10]);return notes}}};Note.prototype.getRecentNotes=function(quantity,append){var notes=[];var objStore=db.transaction(this.store).objectStore("notes");objStore.openCursor().onsuccess=function(event){var cursor=event.target.result;if(cursor){notes.push(cursor.value);cursor.continue()}else{notes.sort(function(a,b){return a.time-b.time});console.log("~ Displaying notes");if(quantity<0){q=null}else{q=quantity}filterNotes(notes.reverse().slice(0,q),append[0],append[1],append[2],append[3],append[4],append[5],append[6],append[7],append[8],append[9],append[10]);return notes.reverse()}}};var note=new Note("notes");function changeStatus(){var title=decodeURIComponent(getURLParameter("title"));var fav=$("#fav").is(":checked");var imp=$("#imp").is(":checked");var min=$("#min").is(":checked");note.getNote(title,null,null,function(n){note.updateNote(n.title,n.title,n.bookmark,n.tags,n.class,n.section,n.body,fav,imp,min)})}function saveNote(){var nH=$("#note-header").text().trim();var nA=$("#note-agenda").val();if(nA==""){nA=false}var nBook=$("#note-bookmark").val();if(nBook==""){nBook=false}var nT=$("#note-tags").text().trim();var nC=$("#note-class").text().trim();var nS=$("#note-section").text().trim();var nB=$("#note-body").val().trim();var nF=$("#fav").is(":checked");var nI=$("#imp").is(":checked");var nM=$("#min").is(":checked");note.getNote(nH,null,null,function(obj){if(obj==undefined){if(nA!=false){newAgendaEvent(nH,nB,nA)}note.addToDB([nH,nA,nBook,nT,nC,nS,nB,nF,nI,nM],function(){window.location.href="readwrite.html?title="+encode(nH)})}else{navigator.notification.alert("Note titles must be unique. This helps keep your notebook organized. Try changing your title.")}})}function addUpdatedVersion(){var title=$("#rw-note-header").text();var bookmark=$("#rw-note-bookmark").val();var tags=$("#rw-note-tags").text();var nclass=$("#rw-note-class").text();var section=$("#rw-note-section").text();var body=$("#rw-note-body").val();var fav=$("#fav").is(":checked");var imp=$("#imp").is(":checked");var min=$("#min").is(":checked");note.updateNote(getURLParameter("title"),title,bookmark,tags,nclass,section,body,fav,imp,min,function(){navigator.notification.alert("Your note has been updated!",null,"Note saved")})}function deleteNote(key){var conf=confirm("Are you sure you want to delete this note?");if(conf==true){note.removeFromDB(key,function(){window.location.href="study.html"})}}function deleteAllNotes(){var conf=confirm("Are you sure you want to delete all of your notes? Once deleted, the will be gone forever.");if(conf==true){var objStore=db.transaction("notes").objectStore("notes");objStore.openCursor().onsuccess=function(event){var cursor=event.target.result;if(cursor){note.removeFromDB(cursor.value.title);cursor.continue()}else{navigator.notification.alert("All notes within the notebook have been deleted.",null,"Notebook emptied.")}}}}function displayNote(noteObj,mode){if(noteObj!=undefined){var d=new Date(noteObj.inittime);var date=d.getDate()+"/"+(d.getMonth()+1)+"/"+d.getFullYear();if(mode=="rw"){$("#rw-note-header").html(noteObj.title);if(noteObj.bookmark!=(false||"false")){$("#rw-note-bookmark").val(noteObj.bookmark)}$("#rw-note-bookmark").val(noteObj.bookmark);$("#rw-note-tags").html(noteObj.tags);$("#rw-note-class").html(noteObj.class);$("#rw-note-section").html(noteObj.section);$("#rw-note-body").html(noteObj.body);$("#rw-inittime").html(date);if(noteObj.favourite){$("#fav").prop("checked",true).checkboxradio("refresh")}if(noteObj.important){$("#imp").prop("checked",true).checkboxradio("refresh")}if(noteObj.minor){$("#min").prop("checked",true).checkboxradio("refresh")}}else{$("#ro-note-header").html(marked(noteObj.title));if(noteObj.agenda!=false){$("#ro-note-agenda").val(noteObj.agenda)}if(noteObj.bookmark!=(false||"false")){$("#ro-note-bookmark").html(noteObj.bookmark);$("#ro-note-bookmark").prop("href",noteObj.bookmark)}$("#ro-note-tags").html(noteObj.tags);$("#ro-note-class").html(noteObj.class);$("#ro-note-section").html(noteObj.section);$("#ro-note-body").html(marked(noteObj.body));$("#ro-inittime").html(date);if(noteObj.favourite){$("#fav").prop("checked",true).checkboxradio("refresh")}if(noteObj.important){$("#imp").prop("checked",true).checkboxradio("refresh")}if(noteObj.minor){$("#min").prop("checked",true).checkboxradio("refresh")}}}else{$("#readwrite-note").html("<div class='mid'><div><h2>There's nothing here!</h2><h3>It doesn't seem like this note exists. Create a new one by tapping the plus icon.</h3></div></div>");$("#readonly-note").html("<div class='mid'><div><h2>There's nothing here!</h2><h3>It doesn't seem like this note exists. Create a new one by tapping the plus icon.</h3></div></div>")}}function filterNotes(meta,list,nclass,nsection,dateb,datea,method,agenda,bookmark,fav,imp,min){if(meta.length<=0){console.log("~ No notes found.");if($("#recent-notes").length){$(list).html("<h2>There's nothing here!</h2><h3>Create a new note by tapping the plus icon.</h3>")}else{$(list).html("<div class='mid'><div><h2>There's nothing here!</h2><h3>Create a new note by tapping the plus icon.</h3></div></div>")}}else{var qualified=[];var before;var after;if(dateb!=null){var before=dateb.split("-").reverse().join("-")}if(datea!=null){var after=datea.split("-").reverse().join("-")}for(i=0;i<meta.length;i+=1){if(nclass!=null&&meta[i].class.toLowerCase().trim()!=nclass.toLowerCase().trim()){continue}else if(nsection!=null&&meta[i].section.toLowerCase().trim()!=nsection.toLowerCase().trim()){continue}else if(dateb!=null&&compareTime(before,meta.initdate)){continue}else if(datea!=null&&compareTime(meta.initdate,after)){continue}else if(agenda=="true"&&meta[i].agenda==false){continue}else if(bookmark=="true"&&meta[i].bookmark==false){continue}else if(fav!=null&&meta[i].favourite==false){continue}else if(imp!=null&&meta[i].important==false){continue}else if(min!=null&&meta[i].minor==false){continue}qualified.push(meta[i]);var highlight;if(meta[i].body.length>40){highlight=meta[i].body.slice(0,40)+"..."}else if(meta[i].body==null||meta[i].body==""){highlight="Nothing to show :("}else{highlight=meta[i].body.replace(/(\r\n|\n|\r)/gm," ")}highlight="<textarea class='highlight-small' readonly>"+highlight+"</textarea>";var tags=meta[i].title+", "+meta[i].tags;if(method=="on"){tags=tags+", "+meta[i].body.split(" ").join(", ")}var date=new Date(meta[i].time);var stamp=date.getDate()+"/"+(date.getMonth()+1)+"/"+date.getFullYear();$(list).append("<li data-filtertext='"+tags+"'><a href='readonly.html?title="+encode(meta[i].title)+"' data-ajax='false'>"+meta[i].title+" <small>"+meta[i].class+", last modified "+stamp+"</small><br>"+highlight+"</a></li>").listview("refresh")}if(qualified.length==0){console.log("~ No notes found.");$(list).html("<div class='mid'><div><h2>There's nothing here!</h2><h3>Create a new note by tapping the plus icon.</h3></div></div>")}}}$(window).on("dbready",function(){console.log("~ DB is ready.");if($("#note-list").length){if(getURLParameter("filterClass")!=null||getURLParameter("filterSection")!=null||getURLParameter("filterDateb")!=null||getURLParameter("filterDatea")!=null||getURLParameter("filterMethod")!=null||getURLParameter("favourite")!=null||getURLParameter("important")!=null||getURLParameter("minor")!=null||getURLParameter("bookmark")!=null||getURLParameter("agenda")!=null){if(getURLParameter("agenda")!=null){note.getRecentNotes(-1,["#note-list",null,null,null,null,null,null,true,null,null,null,null])}note.retrieveAllNotes(["#note-list",getURLParameter("filterClass"),getURLParameter("filterSection"),getURLParameter("filterDateb"),getURLParameter("filterDatea"),getURLParameter("filterMethod"),getURLParameter("agenda"),getURLParameter("bookmark"),getURLParameter("favourite"),getURLParameter("important"),getURLParameter("minor")])}else{note.retrieveAllNotes(["#note-list",null,null,null,null,null,null,null,null,null,null,null])}}if($("#readonly-note").length){note.getNote(getURLParameter("title"),"ro",true)}if($("#readwrite-note").length){note.getNote(getURLParameter("title"),"rw",true)}if($("#recent-notes").length){note.getRecentNotes(5,["#recent-notes",null,null,null,null,null,null,null,null,null,null,null])}});
